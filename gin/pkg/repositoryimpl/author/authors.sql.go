// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: authors.sql

package author_repository_impl

import (
	"context"
	"database/sql"
)

const create = `-- name: Create :execresult
INSERT INTO authors (name, bio) VALUES (?, ?)
`

type CreateParams struct {
	Name string
	Bio  string
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, create, arg.Name, arg.Bio)
}

const getByID = `-- name: GetByID :one
SELECT id, name, bio, created_at, updated_at FROM authors WHERE id = ? LIMIT 1
`

func (q *Queries) GetByID(ctx context.Context, id int64) (Author, error) {
	row := q.db.QueryRowContext(ctx, getByID, id)
	var i Author
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Bio,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
